# -*- coding: utf-8 -*-
"""
Created on Tue Apr 16 15:57:32 2024

@author: DELL
"""
import pandas as pd
import numpy as np

input_file = 'D:\Input\Cigarette\Test Delhi\8. ANKA Insights-21_ Name_Test - Delhi-Mar-24_2024_01_04_11_31.xlsx'
input_sheet = 'Sheet1'
output_path = 'D:\Input\Python exp\CltA2(1)dyn111_dlh.csv'

#Full excel import & sheet parsing
df_global = pd.read_excel(input_file,input_sheet)

control_dc = {'T_A2_1':['T_A1_1','T_D1_9'],'T_A2_2':['T_A1_2','T_D1_8']}
control_col = ['T_A2_1','T_A2_2']
name_col1 = {'T_A2_1':['ERROR 1A : LIKEBILITY OF BUYING BRAND TOTAL CIGARETTE WITHOUT FLAVOUR CAPSULE(T_A2_1) VS SUITABILITY OF BRAND TOTAL WITH NON CAPSULE CIGARETTE(T_A1_1) AND BRAND NAME FOR  CIGARETTE WITHOUT CAPSULE(T_D1_9)'],'T_A2_2':['ERROR 1B : LIKEBILITY OF BUYING BRAND TOTAL CIGARETTE WITH FLAVOUR CAPSULE(T_A2_2) VS SUITABILITY OF BRAND TOTAL WITH  CAPSULE CIGARETTE(T_A1_) AND BRAND NAME FOR  CIGARETTE WITH CAPSULE CIGARETTE(T_D1_8)']}

def iterating_func(control_dict,control_col,df_global,output):
    counter = 0
    for col in control_col:
        
        df = df_global.copy()
        for df_row in range(len(df)):
            if df.loc[df_row,col]==1 or df.loc[df_row,col]==2:
           
            
                if (df.loc[df_row,control_dict[col][0]]==1 or df.loc[df_row,control_dict[col][0]]==2 or df.loc[df_row,control_dict[col][0]]==3) and (df.loc[df_row,control_dict[col][1]]==1 or df.loc[df_row,control_dict[col][1]]==2 or df.loc[df_row,control_dict[col][1]]==3):
                #print('DF col',df_col)
                #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    #print(df)
                else:
                    pass
            elif df.loc[df_row,col]==4 or df.loc[df_row,col]==5:
                if (df.loc[df_row,control_dict[col][0]]==3 or df.loc[df_row,control_dict[col][0]]==4 or df.loc[df_row,control_dict[col][0]]==5) and (df.loc[df_row,control_dict[col][1]]==3 or df.loc[df_row,control_dict[col][1]]==4 or df.loc[df_row,control_dict[col][1]]==5):
                #print('DF col',df_col)
                #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    #print(df)
                else:
                     pass
            elif df.loc[df_row,col]==3 :
                if (df.loc[df_row,control_dict[col][0]]==2 or df.loc[df_row,control_dict[col][0]]==3 or df.loc[df_row,control_dict[col][0]]==4) and (df.loc[df_row,control_dict[col][1]]==2 or df.loc[df_row,control_dict[col][1]]==3 or df.loc[df_row,control_dict[col][1]]==4):
                #print('DF col',df_col)
                #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    #print(df)
                
            else:
                df.drop(df_row,inplace=True)
        df_modified = df.loc[:,['Resp_Id','Interviewer',control_dict[col][1],control_dict[col][0],col]]
        
        Ax=pd.DataFrame(name_col1[col])
        print(Ax) 
        df_s = df_modified['Interviewer'].value_counts()
        df_modified1=pd.DataFrame(df_s)
        total_sum = df_modified1.sum()
        total_sum.name = 'Total'
        
        df_empty= pd.DataFrame()   
        
        if counter==0:
            Ax.to_csv(output, index=False, header=False) 
            
        else:
            df_empty.to_csv(output,mode='a', index=True)
            Ax.to_csv(output,mode='a', index=False, header=False) 

        df_modified1 = df_modified1._append(total_sum)
    
        df_empty= pd.DataFrame()   
    #empty dataframe

        
            
        
        df_modified.to_csv(output,mode='a', index=False)
            
        df_empty.to_csv(output,mode='a', index=True)
        df_modified1.to_csv(output, mode='a', index=True, header=False) 
        counter=counter+1
    
    return(df_modified)

final_df = iterating_func(control_dc,control_col,df_global,output_path)






#Full excel import & sheet parsing
df_global = pd.read_excel(input_file,input_sheet)
control_dc = {'T_B2_1':['T_B13_1'],'T_B2_2':['T_B13_2'],'T_B2_3':['T_B13_3'],'T_B2_4':['T_B13_4'],'T_B2_5':['T_B13_5'],'T_B2_6':['T_B13_6']}
control_col2 = ['T_B2_1','T_B2_2','T_B2_3','T_B2_4','T_B2_5','T_B2_6']
name_col2 = {'T_B2_1':['ERROR 2A : For TOTAL CRUIZE      - Overall liking(T_B2_1) vs feel about TOTAL CRUIZE      and regular brand name (T_B13_1)'],
             'T_B2_2':['ERROR 2B : For TOTAL KRAFT       - Overall liking(T_B2_2) vs feel about TOTAL KRAFT       and regular brand name (T_B13_2)'],
             'T_B2_3':['ERROR 2C : For TOTAL EDGE        - Overall liking(T_B2_3) vs feel about TOTAL EDGE        and regular brand name (T_B13_3)'],
             'T_B2_4':['ERROR 2D : For TOTAL JAZZ        - Overall liking(T_B2_4) vs feel about TOTAL JAZZ        and regular brand name (T_B13_4)'],
             'T_B2_5':['ERROR 2E : For TOTAL ICE FRUIT   - Overall liking(T_B2_5) vs feel about TOTAL ICE FRUIT   and regular brand name (T_B13_5)'],
             'T_B2_6':['ERROR 2F : For TOTAL TANGO       - Overall liking(T_B2_6) vs feel about TOTAL TANGO       and regular brand name (T_B13_6)']
             }
def iterating_func(control_dict,control_col2,df_global,output):
    
    for col in control_col2:
    
        df = df_global.copy()
        for df_row in range(len(df)):
            if df.loc[df_row,col]>=8 :
               
                
                if df.loc[df_row,control_dict[col][0]]>=4 :
                    #print('DF col',df_col)
                    #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    print(df)
                else:
                    pass
            elif df.loc[df_row,col] in range(1,7):
                if df.loc[df_row,control_dict[col][0]] in range(1,4):
                    #print('DF col',df_col)
                    #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    print(df)
                else:
                     pass
            elif df.loc[df_row,col]==7 :
                if df.loc[df_row,control_dict[col][0]] in range(2,5):
                    #print('DF col',df_col)
                    #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    print(df)     
                    
            else:
                df.drop(df_row,inplace=True)
        df_modified = df.loc[:,['Resp_Id','Interviewer',col,control_dict[col][0]]]
        
        Ax=pd.DataFrame(name_col2[col])
        
        df_s = df_modified['Interviewer'].value_counts()
        df_modified1=pd.DataFrame(df_s)
        total_sum = df_modified1.sum()
        total_sum.name = 'Total'
        
        df_empty= pd.DataFrame()
        
        df_empty.to_csv(output,mode='a', index=True)
        Ax.to_csv(output,mode='a', index=False, header=False) 
    
        df_modified1 = df_modified1._append(total_sum)
        
        df_empty = pd.DataFrame()   
        #empty dataframe
    
    
        df_modified.to_csv(output,mode='a', index=False)
        df_empty.to_csv(output,mode='a', index=True)
        df_modified1.to_csv(output, mode='a', index=True, header=False) 
    
    return(df_modified1)

final_df = iterating_func(control_dc,control_col2,df_global,output_path)
















#Full excel import & sheet parsing
df_global = pd.read_excel(input_file,input_sheet)
control_dc = {'T_B2_1':['T_B14_1'],'T_B2_2':['T_B14_2'],'T_B2_3':['T_B14_3'],'T_B2_4':['T_B14_4'],'T_B2_5':['T_B14_5'],'T_B2_6':['T_B14_6']}
control_col3 = ['T_B2_1','T_B2_2','T_B2_3','T_B2_4','T_B2_5','T_B2_6']

name_col2 = {'T_B2_1':['ERROR 3A : For TOTAL CRUIZE      - Overall liking(T_B2_1) vs likeliness of buying TOTAL CRUIZE    if available in the market(T_B14_1)'],
             'T_B2_2':['ERROR 3B : For TOTAL KRAFT       - Overall liking(T_B2_2) vs likeliness of buying TOTAL KRAFT     if available in the market (T_B14_2)'],
             'T_B2_3':['ERROR 3C : For TOTAL EDGE        - Overall liking(T_B2_3) vs likeliness of buying TOTAL EDGE      if available in the market (T_B14_3)'],
             'T_B2_4':['ERROR 3D : For TOTAL JAZZ        - Overall liking(T_B2_4) vs likeliness of buying TOTAL JAZZ      if available in the market (T_B14_4)'],
             'T_B2_5':['ERROR 3E : For TOTAL ICE FRUIT   - Overall liking(T_B2_5) vs likeliness of buying TOTAL ICE FRUIT if available in the market (T_B14_5)'],
             'T_B2_6':['ERROR 3F : For TOTAL TANGO       - Overall liking(T_B2_6) vs likeliness of buying TOTAL TANGO     if available in the market (T_B14_6)']
             }

def iterating_func(control_dict,control_column,df,output):
    
    for col in control_column:
        df = df_global.copy()
        for df_row in range(len(df)):
            if df.loc[df_row,col]>=8 :
               
                
                if df.loc[df_row,control_dict[col][0]]>=4 :
                    #print('DF col',df_col)
                    #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    print(df)
                else:
                    pass
            elif df.loc[df_row,col] in range(1,7):
                if df.loc[df_row,control_dict[col][0]] in range(1,4):
                    #print('DF col',df_col)
                    #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    print(df)
                else:
                     pass
            
            elif df.loc[df_row,col]==7 :
                if df.loc[df_row,control_dict[col][0]] in range(2,5):
                    #print('DF col',df_col)
                    #print(df_col+num_of_unique_cols)
                    df.drop(df_row,inplace=True)
                    print(df)           
            else:
                df.drop(df_row,inplace=True)
        df_modified = df.loc[:,['Resp_Id','Interviewer',col,control_dict[col][0]]]
        
        Ax=pd.DataFrame(name_col2[col])
    
        df_s = df_modified['Interviewer'].value_counts()
        df_modified1=pd.DataFrame(df_s)
        total_sum = df_modified1.sum()
        total_sum.name = 'Total'
        
        df_empty= pd.DataFrame()
        
        df_empty.to_csv(output,mode='a', index=True)
        Ax.to_csv(output,mode='a', index=False, header=False) 
    
    
        df_modified1 = df_modified1._append(total_sum)
        
        df_empty = pd.DataFrame()   
        #empty dataframe
    
    
        df_modified.to_csv(output,mode='a', index=False)
        df_empty.to_csv(output,mode='a', index=True)
        df_modified1.to_csv(output, mode='a', index=True, header=False) 
    
    return(df_modified1)

final_df = iterating_func(control_dc,control_col3,df_global,output_path)











